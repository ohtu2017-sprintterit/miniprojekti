plugins {
    id 'com.github.kt3k.coveralls' version '2.8.1'
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'

project.ext {
    cucumberVersion = '1.2.5'
    seleniumVersion = '2.41.0'
    junitVersion = '4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:slf4j-simple:1.6.1'
    compile 'com.sparkjava:spark-core:2.5.5'
    compile 'com.sparkjava:spark-template-thymeleaf:2.5.5'
    compile 'org.xerial:sqlite-jdbc:3.16.1'
    compile 'org.postgresql:postgresql:42.0.0'
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'info.cukes:cucumber-java:' + cucumberVersion
    testCompile 'info.cukes:cucumber-junit:' + cucumberVersion
    compile 'org.seleniumhq.selenium:selenium-htmlunit-driver:' + seleniumVersion
    compile 'org.seleniumhq.selenium:selenium-firefox-driver:' + seleniumVersion
    compile 'org.seleniumhq.selenium:selenium-chrome-driver:' + seleniumVersion
    compile 'org.seleniumhq.selenium:selenium-api:' + seleniumVersion
    compile 'org.seleniumhq.selenium:selenium-java:' + seleniumVersion
}

mainClassName = 'sprintterit.Main'

jar {
    manifest {
        attributes 'Main-Class': 'sprintterit.Main'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
}

run {
    standardInput = System.in
}

task stage {
    dependsOn installDist
}
